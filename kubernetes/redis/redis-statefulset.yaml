apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: redis-cluster
  labels:
    app: redis-cluster
spec:
  selector:
    matchLabels:
      app: redis-cluster
  # replicas: 6
  replicas: 3
  serviceName: redis-cluster-headless
  podManagementPolicy: Parallel
  template:
    metadata:
      labels:
        app: redis-cluster
    spec:
      securityContext:
        fsGroup: 1001
        runAsUser: 1001
        sysctls: []
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app: redis-cluster
                # namespaces:
                #   - "default"
                topologyKey: kubernetes.io/hostname
              weight: 1

      containers:
        - name: redis-cluster
          image: redis:7.0.4
          imagePullPolicy: "IfNotPresent"
          securityContext:
            runAsNonRoot: true
            runAsUser: 1001
          command: ["/bin/bash", "-c"]
          args:
            - |
              redis-server /etc/redis/redis.conf --requirepass $REDISCLI_AUTH
          env:
            # - name: POD_NAME
            #   valueFrom:
            #     fieldRef:
            #       fieldPath: metadata.name
            - name: REDISCLI_AUTH
              valueFrom:
                secretKeyRef:
                  name: redis-secret
                  key: redis-password
          ports:
            - name: tcp-redis
              containerPort: 6379
            - name: tcp-redis-bus
              containerPort: 16379
          livenessProbe:
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 6
            successThreshold: 1
            failureThreshold: 3
            exec:
              command:
                - /scripts/ping_liveness_local.sh
                - "5"
          readinessProbe:
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 2
            successThreshold: 1
            failureThreshold: 3
            exec:
              command:
                - /scripts/ping_readiness_local.sh
                - "1"
          resources:
            limits: {}
            requests: {}
          volumeMounts:
            - name: redis-data
              mountPath: /data
            - name: redis-config
              mountPath: /etc/redis/redis.conf
              subPath: redis.conf
            - name: redis-scripts
              mountPath: /scripts
      volumes:
        - name: redis-config
          configMap:
            name: redis-config
        - name: redis-scripts
          configMap:
            name: redis-scripts
            defaultMode: 0755
  volumeClaimTemplates:
    - metadata:
        name: redis-data
        labels:
          app: redis-cluster
      spec:
        accessModes:
          - "ReadWriteMany"
        # storageClassName: my-azurefile-csi
        storageClassName: azurefile-csi
        resources:
          requests:
            storage: "1Gi"
